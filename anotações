Curso 3

### Aula 06 Tópico 02
    https://laravel.com/docs/9.x/providers
    https://laravel.com/docs/9.x/container


### Aula 04 Tópico 03

    Linha de código para criar uma migration relacionada à tabela episodes com o nomes da migration:

        php artisan make:migration --table=episodes add_watched_episodes


#Porque as arrow functions retornam o valor da expressão utilizada.
    Alternativa correta! Toda arrow function no PHP retorna o valor da expressão que nós utilizamos nela. 
    Isso é um problema porque o método each vai ser interrompido se a função passada pra ele retornar false. 
    Então quando nós tivéssemos o primeiro episódio que tivesse watched = false, esse valor seria retornado e o loop se encerraria.

### Aula 4 Tópico 04

Auth::attempt() 
é o método que realiza a verificação se o usuário está logado
Nós já sabemos que o conceito de Facade é basicamente fornecer acesso simplificado a um subsistema mais complexo. É exatamente isso que a classe Auth nos fornece.

Ao chamar o método Auth::check ela verifica no guard configurado se há algum usuário presente. O guard padrão é session que armazena o usuário em sessão.

Quando chamamos o Auth::attempt passando as credenciais por parâmetro, o que o sistema vai fazer é utilizar o provider de usuários para tentar encontrar o usuário referente as credenciais enviadas. O provider padrão é o Eloquent, ou seja, nós tentamos buscar o usuário no banco de dados.

É possível personalizar isso usando um token ao invés de sessão e buscando o usuário em um servidor LDAP ao invés de usar o Eloquent, mas para este treinamento as opções padrão são perfeitas. :-D

### Aula 07 Tópico 04
Como nós poderíamos implementar um campo de confirmação de senha?
Tendo um input chamado password_confirmation e adicionando ao request a validação confirmed no campo password.
A validação confirmed quando adicionada às regras do nosso request exige que o campo em questão possua também um outro campo chamado {campo}_confirmation com o mesmo valor. 
https://laravel.com/docs/9.x/validation#rule-confirmed


### Aula 2 Tópico 05
Auth::user()
Retorna o usuário que está autenticado na sessão.


### Aula 05 Tópico 05 - Breeze

composer create-project laravel/laravel:^9.0 breeze

composer require laravel/breeze --dev

php artisan breeze:install
 
php artisan migrate
npm install
npm run dev